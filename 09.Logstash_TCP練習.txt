input  {
     tcp {
        port => 5168
        mode => "server"
        ssl_enable=> false
    }
}
output {
  stdout { }
}

command:
$ touch /tmp/myfile
$ vi /tmp/myfile
  hello logstash!
  hi ELK
  hey Elasticsearch
$ nc 127.0.0.1 5168 < /tmp/myfile

---------------------------------------------------------------------------

# tcp_server.py

import socket  
import sys  
  
HOST = '127.0.0.1'               # Symbolic name meaning all available interfaces  
PORT = 5888                      # Arbitrary non-privileged port  
s = None
for res in socket.getaddrinfo(HOST, PORT, socket.AF_UNSPEC,  
                              socket.SOCK_STREAM, 0, socket.AI_PASSIVE):  
    af, socktype, proto, canonname, sa = res
    try:
        #..getaddrinfo()........socket  
        s = socket.socket(af, socktype, proto)
    except socket.error, err_msg:
        print err_msg #......  
        s = None
        continue
    try:
        #sa.(host,port)....  
        s.bind(sa)
        #.......  
        s.listen(1)
    except socket.error, err_msg:
        print err_msg
        s.close()
        s = None
        continue
    break
if s is None:
    print 'could not open socket'
    sys.exit(1)

conn, addr = s.accept()
print 'Connected by', addr

while 1:
    data = conn.recv(1024)
    if not data: break  
    conn.send(data)
print data
conn.close()

--------------------------------------------------------------------------------------
# tcp_client.py

# Echo client program  
import socket  
import sys  
  
HOST = '127.0.0.1'
PORT = 5888
s = None  
for res in socket.getaddrinfo(HOST, PORT, socket.AF_UNSPEC, socket.SOCK_STREAM):  
    af, socktype, proto, canonname, sa = res  
    try:  
        s = socket.socket(af, socktype, proto)  
    except socket.error, msg:  
        s = None  
        continue  
    try:  
        s.connect(sa)  
    except socket.error, msg:  
        s.close()  
        s = None  
        continue  
    break  
if s is None:  
    print 'could not open socket'  
    sys.exit(1)  
      
s.sendall('Hello, world')
data = s.recv(1024)
s.close()  
print 'Received', repr(data)

-------------------------------------------------------------------------------------
command:
$ python tcp_server.py
$ python tcp_client.py